---
# cord Scenario
# for both Physical (using a corddev VM) and Virtual (using multiple VMs)

# cord profile config
frontend_only: False

build_cord_dir: "/home/vagrant/cord"

buildnode: corddev
headnode: prod

# docker config
deploy_docker_tag: "candidate"

# make build config
build_targets:
 - deploy-maas
 - onboard-openstack

vagrant_up_prereqs:
  - prereqs-check

# Copy cord and config to physical/virtual nodes
cord_config_prereqs:
  - copy-cord

copy_config_prereqs:
  - cord-config

# Can prep build and head node simultaneously
prep_buildnode_prereqs:
  - copy-cord
  - copy-config

prep_headnode_prereqs:
  - copy-cord
  - copy-config

# Wait until headnode prepped before building containers, for consistent DNS
docker_images_prereqs:
  - prep-headnode

# Start elasticstack before XOS/ONOS, which log to it
start_xos_prereqs:
  - deploy-elasticstack

deploy_onos_prereqs:
  - deploy-elasticstack

# Vagrant VM configuration
vagrant_vms:
  - corddev
  - prod

dev_vm_mem: 2048
dev_vm_cpu: 1

head_vm_mem: 16384
head_vm_cpu: 8

compute_vm_mem: 16384
compute_vm_cpu: 8

switch_vm_mem: 512
switch_vm_cpu: 1

vm_management_network_name: cordmgmt

# Enable experimental fabric
enable_fabric: False

# images for imagebuilder to build/pull (tagged elsewhere)
docker_image_whitelist:
  - "xosproject/xos-base"
  - "xosproject/xos"
  - "xosproject/xos-client"
  - "xosproject/xos-corebuilder"
  - "xosproject/xos-gui"
  - "xosproject/xos-gui-extension-builder"
  - "xosproject/xos-libraries"
  - "xosproject/xos-postgres"
  - "xosproject/xos-tosca"
  - "xosproject/xos-ws"
  - "xosproject/chameleon"
  - "xosproject/gui-extension-rcord"
  - "xosproject/gui-extension-sample"
  - "xosproject/gui-extension-vtr"
  - "xosproject/xos-synchronizer-base"
  - "xosproject/exampleservice-synchronizer"
  - "xosproject/fabric-synchronizer"
  - "xosproject/onos-synchronizer"
  - "xosproject/openstack-synchronizer"
  - "xosproject/volt-synchronizer"
  - "xosproject/vrouter-synchronizer"
  - "xosproject/vsg-synchronizer"
  - "xosproject/vtn-synchronizer"
  - "xosproject/vtr-synchronizer"
  - "gliderlabs/consul-server"
  - "gliderlabs/registrator"
  - "nginx"
  - "onosproject/onos"
  - "redis"

# node topology
physical_node_list:
  - name: prod
    ipv4_last_octet: 1
    aliases:
      - head

# Inventory for ansible, used to generate inventory.ini
inventory_groups:

  config:
    corddev:

  build:
    corddev:

  head:
    prod:

  compute:

