---
# cord Scenario
# for both Physical (using a corddev VM) and Virtual (using multiple VMs)

# make build config
build_targets:
 - deploy-maas
 - onboard-openstack

vagrant_vms:
  - corddev
  - prod

vagrant_up_prereqs:
  - prereqs-check

# have to copy cord and config to physical/virtual nodes
cord_config_prereqs:
  - copy-cord

copy_config_prereqs:
  - cord-config

# can prep build and head node simultaneously
prep_buildnode_prereqs:
  - copy-cord
  - copy-config

prep_headnode_prereqs:
  - copy-cord
  - copy-config

build_cord_dir: "/home/vagrant/cord"

buildnode: corddev
headnode: prod

dev_vm_mem: 2048
dev_vm_cpu: 1

head_vm_mem: 16384
head_vm_cpu: 8

compute_vm_mem: 16384
compute_vm_cpu: 8

switch_vm_mem: 512
switch_vm_cpu: 1

mgmt_network_name: cordmgmt

# Enable experimental fabric
enable_fabric: False

# cord profile config
frontend_only: False

# docker config
deploy_docker_tag: "candidate"

# images for imagebuilder to build/pull (tagged elsewhere)
docker_image_whitelist:
  - "xosproject/xos-base"
  - "xosproject/xos"
  - "xosproject/xos-client"
  - "xosproject/xos-corebuilder"
  - "xosproject/xos-gui"
  - "xosproject/xos-gui-extension-builder"
  - "xosproject/xos-libraries"
  - "xosproject/xos-postgres"
  - "xosproject/xos-tosca"
  - "xosproject/xos-synchronizer-base"
  - "xosproject/xos-ws"
  - "xosproject/chameleon"
  - "xosproject/gui-extension-rcord"
  - "xosproject/gui-extension-sample"
  - "xosproject/gui-extension-vtr"
  - "xosproject/onos-synchronizer"
  - "xosproject/openstack-synchronizer"
  - "xosproject/vrouter-synchronizer"
  - "xosproject/vtn-synchronizer"
  - "xosproject/exampleservice-synchronizer"
  - "gliderlabs/consul-server"
  - "gliderlabs/registrator"
  - "nginx"
  - "onosproject/onos"
  - "redis"

# Inventory for ansible, used to generate inventory.ini
inventory_groups:

  config:
    corddev:

  build:
    corddev:

  head:
    prod:

  compute:

